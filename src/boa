#!/usr/bin/env bash

# Copyright (c) 2025 MLS Tidbits <contact@mlstidbits.com>
# All rights reserved.

set -euo pipefail



_appName="boa"
_appVersion=$(cat /usr/share/doc/boa/version 2> /dev/null || echo "unknown")

# Verify that the boa.yaml file exists and is in the correct format
test -f "boa.yaml" || { echo "Error: boa.yaml file not found!" ; exit 1 ; }

_format="$(yq '.format' boa.yaml | tr -d '"')"
[ "$_format" = "yaml" ] || {
echo "Error: boa.yaml file is not in the correct format!" ; exit 1 ; }

_cmd="dpkg-buildpackage"

_build="$(yq '.build' boa.yaml | tr -d '"')"

case "$_build" in
    source|binary|source,binary) _cmd+=" --build=$_build" ;;
    *) echo "Error: Invalid build type specified in boa.yaml!" ; exit 1 ;;
esac

_noPreClean="$(yq '.no_pre_clean' boa.yaml | tr -d '"')"

[ "$_noPreClean" = "true" ] && _cmd+=" --no-pre-clean"
[ "$_noPreClean" = "false" ] && _cmd+=" --pre-clean"

_noPostClean="$(yq '.no_post_clean' boa.yaml | tr -d '"')"

[ "$_noPostClean" = "true" ] && _cmd+=" --no-post-clean"
[ "$_noPostClean" = "false" ] && _cmd+=" --post-clean"

_checkBuildDeps="$(yq '.check_builddeps' boa.yaml | tr -d '"')"

[ "$_checkBuildDeps" = "true" ] && _cmd+=" --check-builddeps"

# Verify that the jobs value is valid
_jobs="$(yq '.jobs' boa.yaml | tr -d '"')"
case "$_jobs" in
    auto) _cmd+=" --jobs=$_jobs" ;;
    [0-9]*[0-9])
        test "$_jobs" -gt "$(nproc --all)" && {
        echo "Error: Jobs value cannot exceed the number of CPU cores!" ; exit 1 ; }
        _cmd+=" --jobs=$_jobs"
    ;;
    *) test "$_jobs" -ge 1 || { echo "Error: Jobs value must be at least 1!" ; exit 1 ; } ;;
esac

if [ "$(yq '.no_sign' boa.yaml | tr -d '"')" = "true" ]; then
    _cmd+=" --no-sign"
else
    _signBackend="$(yq '.sign.backend' boa.yaml | tr -d '"')"
    case "$_signBackend" in
        sop|sq|gpg) _cmd+=" --sign-backend=$_signBackend" ;;
        *) echo "Error: Invalid sign backend specified in boa.yaml!" ; exit 1 ;;
    esac

    _signKeyID="$(yq '.sign.keyid' boa.yaml | tr -d '"')"
    [ -n "$_signKeyID" ] && _cmd+=" --sign-keyid=$_signKeyID"

    _signPause="$(yq '.sign.pause' boa.yaml | tr -d '"')"
    [ "$_signPause" = "true" ] && _cmd+=" --sign-pause"
fi
